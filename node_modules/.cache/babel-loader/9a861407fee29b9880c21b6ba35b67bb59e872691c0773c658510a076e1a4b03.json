{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RonaldoPimentel\\\\Documents\\\\hub-maximiza-atualizado\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api, { testConnection } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Testar conex√£o primeiro\n        const isConnected = await testConnection();\n        if (!isConnected) {\n          console.warn('‚ö†Ô∏è N√£o foi poss√≠vel conectar com a API');\n        }\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await api.get('/auth/me');\n          setUser(response.data.user);\n        }\n      } catch (error) {\n        console.error('Erro na verifica√ß√£o de autentica√ß√£o:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      console.log('üîÑ Tentando fazer login...', {\n        email\n      });\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      console.log('‚úÖ Login bem-sucedido:', response.data);\n      const {\n        token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      toast.success('Login realizado com sucesso!');\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('‚ùå Erro no login:', error);\n      let message = 'Erro ao fazer login';\n      if (error.code === 'ECONNREFUSED' || error.code === 'ERR_NETWORK') {\n        message = 'N√£o foi poss√≠vel conectar com o servidor. Verifique se o backend est√° rodando.';\n      } else if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n        message = error.response.data.message;\n      } else if (error.message) {\n        message = error.message;\n      }\n      toast.error(message);\n      throw new Error(message);\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      // Ignorar erros de logout\n      console.warn('Erro no logout (ignorado):', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.info('Logout realizado com sucesso');\n    }\n  };\n  const updatePassword = async (currentPassword, newPassword) => {\n    try {\n      // Simula√ß√£o de atualiza√ß√£o de senha\n      // Em produ√ß√£o, fazer chamada para API\n      toast.success('Senha atualizada com sucesso!');\n      return true;\n    } catch (error) {\n      toast.error('Erro ao atualizar senha');\n      throw error;\n    }\n  };\n  const resetPassword = async email => {\n    try {\n      // Simula√ß√£o de reset de senha\n      // Em produ√ß√£o, fazer chamada para API\n      toast.success(`Email de recupera√ß√£o enviado para ${email}`);\n      return true;\n    } catch (error) {\n      toast.error('Erro ao enviar email de recupera√ß√£o');\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    updatePassword,\n    resetPassword,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","toast","api","testConnection","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","isConnected","console","warn","token","localStorage","getItem","response","get","data","error","removeItem","login","email","password","log","post","userData","setItem","JSON","stringify","success","_error$response","_error$response$data","message","code","logout","info","updatePassword","currentPassword","newPassword","resetPassword","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RonaldoPimentel/Documents/hub-maximiza-atualizado/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api, { testConnection } from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Testar conex√£o primeiro\r\n        const isConnected = await testConnection();\r\n        if (!isConnected) {\r\n          console.warn('‚ö†Ô∏è N√£o foi poss√≠vel conectar com a API');\r\n        }\r\n\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const response = await api.get('/auth/me');\r\n          setUser(response.data.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro na verifica√ß√£o de autentica√ß√£o:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      console.log('üîÑ Tentando fazer login...', { email });\r\n      \r\n      const response = await api.post('/auth/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      console.log('‚úÖ Login bem-sucedido:', response.data);\r\n\r\n      const { token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      toast.success('Login realizado com sucesso!');\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('‚ùå Erro no login:', error);\r\n      \r\n      let message = 'Erro ao fazer login';\r\n      \r\n      if (error.code === 'ECONNREFUSED' || error.code === 'ERR_NETWORK') {\r\n        message = 'N√£o foi poss√≠vel conectar com o servidor. Verifique se o backend est√° rodando.';\r\n      } else if (error.response?.data?.message) {\r\n        message = error.response.data.message;\r\n      } else if (error.message) {\r\n        message = error.message;\r\n      }\r\n      \r\n      toast.error(message);\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      // Ignorar erros de logout\r\n      console.warn('Erro no logout (ignorado):', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      toast.info('Logout realizado com sucesso');\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      // Simula√ß√£o de atualiza√ß√£o de senha\r\n      // Em produ√ß√£o, fazer chamada para API\r\n      toast.success('Senha atualizada com sucesso!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('Erro ao atualizar senha');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (email) => {\r\n    try {\r\n      // Simula√ß√£o de reset de senha\r\n      // Em produ√ß√£o, fazer chamada para API\r\n      toast.success(`Email de recupera√ß√£o enviado para ${email}`);\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('Erro ao enviar email de recupera√ß√£o');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    updatePassword,\r\n    resetPassword,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}