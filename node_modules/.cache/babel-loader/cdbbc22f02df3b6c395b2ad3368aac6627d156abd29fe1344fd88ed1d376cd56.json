{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RonaldoPimentel\\\\Documents\\\\hub-maximiza-atualizado\\\\src\\\\components\\\\ApiDebug.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport api, { testConnection } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DebugContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 9999;\n  max-width: 300px;\n  font-size: 0.85rem;\n`;\n_c = DebugContainer;\nconst DebugButton = styled.button`\n  background: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 0.25rem;\n  font-size: 0.8rem;\n\n  &:hover {\n    background: var(--secondary-color);\n  }\n`;\n_c2 = DebugButton;\nconst DebugLog = styled.div`\n  max-height: 200px;\n  overflow-y: auto;\n  background: #f8f9fa;\n  padding: 0.5rem;\n  border-radius: 4px;\n  margin-top: 0.5rem;\n  font-family: monospace;\n  font-size: 0.75rem;\n`;\n_c3 = DebugLog;\nconst ApiDebug = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  const addLog = (message, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLogs(prev => [...prev, {\n      message,\n      type,\n      timestamp\n    }]);\n  };\n  const testAPI = async () => {\n    addLog('🧪 Testando conectividade...', 'info');\n    const isConnected = await testConnection();\n    if (isConnected) {\n      addLog('✅ API conectada com sucesso!', 'success');\n    } else {\n      addLog('❌ Falha na conexão com API', 'error');\n    }\n  };\n  const testLogin = async () => {\n    addLog('🔐 Testando login...', 'info');\n    try {\n      const response = await api.post('/auth/login', {\n        email: 'admin@hubmaximiza.com',\n        password: 'admin123'\n      });\n      addLog('✅ Login funcionando!', 'success');\n      addLog(`Token: ${response.data.token.substring(0, 20)}...`, 'info');\n    } catch (error) {\n      addLog(`❌ Erro no login: ${error.message}`, 'error');\n    }\n  };\n  const clearLogs = () => {\n    setLogs([]);\n  };\n  if (!isVisible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(DebugButton, {\n        onClick: () => setIsVisible(true),\n        children: \"\\uD83D\\uDD27 Debug API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DebugContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem',\n        fontWeight: 'bold'\n      },\n      children: [\"API Debug Console\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsVisible(false),\n        style: {\n          float: 'right',\n          background: 'none',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DebugButton, {\n        onClick: testAPI,\n        children: \"Test API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DebugButton, {\n        onClick: testLogin,\n        children: \"Test Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DebugButton, {\n        onClick: clearLogs,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DebugLog, {\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: log.type === 'error' ? '#dc3545' : log.type === 'success' ? '#28a745' : '#333',\n          marginBottom: '0.25rem'\n        },\n        children: [\"[\", log.timestamp, \"] \", log.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiDebug, \"g3FRoDmFaLYxT0ygIkwQC/E0jTA=\");\n_c4 = ApiDebug;\nexport default ApiDebug;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DebugContainer\");\n$RefreshReg$(_c2, \"DebugButton\");\n$RefreshReg$(_c3, \"DebugLog\");\n$RefreshReg$(_c4, \"ApiDebug\");","map":{"version":3,"names":["React","useState","styled","api","testConnection","jsxDEV","_jsxDEV","DebugContainer","div","_c","DebugButton","button","_c2","DebugLog","_c3","ApiDebug","_s","logs","setLogs","isVisible","setIsVisible","addLog","message","type","timestamp","Date","toLocaleTimeString","prev","testAPI","isConnected","testLogin","response","post","email","password","data","token","substring","error","clearLogs","style","position","bottom","right","zIndex","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","fontWeight","float","background","border","cursor","map","log","index","color","_c4","$RefreshReg$"],"sources":["C:/Users/RonaldoPimentel/Documents/hub-maximiza-atualizado/src/components/ApiDebug.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport api, { testConnection } from '../utils/api';\r\n\r\nconst DebugContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  z-index: 9999;\r\n  max-width: 300px;\r\n  font-size: 0.85rem;\r\n`;\r\n\r\nconst DebugButton = styled.button`\r\n  background: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin: 0.25rem;\r\n  font-size: 0.8rem;\r\n\r\n  &:hover {\r\n    background: var(--secondary-color);\r\n  }\r\n`;\r\n\r\nconst DebugLog = styled.div`\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  background: #f8f9fa;\r\n  padding: 0.5rem;\r\n  border-radius: 4px;\r\n  margin-top: 0.5rem;\r\n  font-family: monospace;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nconst ApiDebug = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const addLog = (message, type = 'info') => {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    setLogs(prev => [...prev, { message, type, timestamp }]);\r\n  };\r\n\r\n  const testAPI = async () => {\r\n    addLog('🧪 Testando conectividade...', 'info');\r\n    \r\n    const isConnected = await testConnection();\r\n    if (isConnected) {\r\n      addLog('✅ API conectada com sucesso!', 'success');\r\n    } else {\r\n      addLog('❌ Falha na conexão com API', 'error');\r\n    }\r\n  };\r\n\r\n  const testLogin = async () => {\r\n    addLog('🔐 Testando login...', 'info');\r\n    \r\n    try {\r\n      const response = await api.post('/auth/login', {\r\n        email: 'admin@hubmaximiza.com',\r\n        password: 'admin123'\r\n      });\r\n      \r\n      addLog('✅ Login funcionando!', 'success');\r\n      addLog(`Token: ${response.data.token.substring(0, 20)}...`, 'info');\r\n    } catch (error) {\r\n      addLog(`❌ Erro no login: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const clearLogs = () => {\r\n    setLogs([]);\r\n  };\r\n\r\n  if (!isVisible) {\r\n    return (\r\n      <div style={{\r\n        position: 'fixed',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        zIndex: 9999\r\n      }}>\r\n        <DebugButton onClick={() => setIsVisible(true)}>\r\n          🔧 Debug API\r\n        </DebugButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DebugContainer>\r\n      <div style={{ marginBottom: '0.5rem', fontWeight: 'bold' }}>\r\n        API Debug Console\r\n        <button \r\n          onClick={() => setIsVisible(false)}\r\n          style={{ float: 'right', background: 'none', border: 'none', cursor: 'pointer' }}\r\n        >\r\n          ✕\r\n        </button>\r\n      </div>\r\n      \r\n      <div>\r\n        <DebugButton onClick={testAPI}>Test API</DebugButton>\r\n        <DebugButton onClick={testLogin}>Test Login</DebugButton>\r\n        <DebugButton onClick={clearLogs}>Clear</DebugButton>\r\n      </div>\r\n\r\n      <DebugLog>\r\n        {logs.map((log, index) => (\r\n          <div key={index} style={{\r\n            color: log.type === 'error' ? '#dc3545' : \r\n                   log.type === 'success' ? '#28a745' : '#333',\r\n            marginBottom: '0.25rem'\r\n          }}>\r\n            [{log.timestamp}] {log.message}\r\n          </div>\r\n        ))}\r\n      </DebugLog>\r\n    </DebugContainer>\r\n  );\r\n};\r\n\r\nexport default ApiDebug;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}